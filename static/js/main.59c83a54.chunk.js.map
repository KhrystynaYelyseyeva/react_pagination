{"version":3,"sources":["components/Pagination/Pagination.js","App.js","index.js"],"names":["Pagination","onClick","page","total","className","type","data-name","middleBtn","btns","map","btn","key","renderPaginationBtn","App","state","handleChange","btnType","target","getAttribute","isNaN","updatePage","Number","number","setState","this","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iNAmDaA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAlB,OACxB,yBAAKC,UAAU,cACZF,EAAO,GACL,4BAAQG,KAAK,SAASJ,QAASA,EAASK,YAAU,QAAQ,MAnDrC,SAACL,EAASC,EAAMC,GAC1C,IAAMI,EAAY,MAGdC,EAAO,GAcX,OAZIN,EAAOC,EAAQ,GAAKD,EAAO,EAC7BM,EAAI,CAAI,EAAGD,GAAP,OALU,CAACL,EAAO,EAAGA,EAAMA,EAAO,GAKlC,CAA8BK,EAAWJ,IAG3CD,GAAQC,EAAQ,EAClBK,EAAO,CAACL,EAAQ,EAAGA,EAAQ,EAAGA,GAG5BD,GAAQ,IACVM,EAAO,CAAC,EAAG,EAAG,IAGTA,EAAKC,KAAI,SAACC,GACf,MAAY,QAARA,EACKA,EAIP,4BACEL,KAAK,SACLM,IAAKD,EACLT,QAASA,EACTK,YAAWI,GAEVA,MAsBJE,CAAoBX,EAASC,EAAMC,GACnCD,EAAOC,EAAQ,GACb,4BAAQE,KAAK,SAASJ,QAASA,EAASK,YAAU,QAAQ,QCRlDO,G,kNA5CbC,MAAQ,CACNZ,KAAM,EACNC,MAAO,I,EAGTY,aAAe,YAAiB,IACxBC,EADuB,EAAbC,OACOC,aAAa,aAC5BhB,EAAS,EAAKY,MAAdZ,KAGR,GAAKiB,MAAMH,GAGT,OAAQA,GACN,IAAK,OACH,EAAKI,WAAWlB,EAAO,GACvB,MACF,IAAK,OACH,EAAKkB,WAAWlB,EAAO,QAP3B,EAAKkB,WAAWC,OAAOL,K,EAc3BI,WAAa,SAACE,GACZ,EAAKC,SAAS,CACZrB,KAAMoB,K,uDAIA,IAAD,EACiBE,KAAKV,MAArBZ,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPD,KAAMA,EACND,QAASuB,KAAKT,mB,GAvCJU,kBCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.59c83a54.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst renderPaginationBtn = (onClick, page, total) => {\n  const middleBtn = '...';\n  const gapBtns = [page - 1, page, page + 1];\n\n  let btns = [];\n\n  if (page < total - 2 && page > 3) {\n    btns = [1, middleBtn, ...gapBtns, middleBtn, total];\n  } else\n\n  if (page >= total - 2) {\n    btns = [total - 2, total - 1, total];\n  } else\n\n  if (page <= 3) {\n    btns = [1, 2, 3];\n  }\n\n  return btns.map((btn) => {\n    if (btn === '...') {\n      return btn;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        key={btn}\n        onClick={onClick}\n        data-name={btn}\n      >\n        {btn}\n      </button>\n    );\n  });\n};\n\n// const rangeButtons = (from, to, step = 1) => {\n//   let i = from;\n//   const range = [];\n//\n//   while (i <= to) {\n//     range.push(i);\n//     i += step;\n//   }\n//\n//   return range;\n// };\n\nexport const Pagination = ({ onClick, page, total }) => (\n  <div className=\"pagination\">\n    {page > 3\n    && <button type=\"button\" onClick={onClick} data-name=\"prev\">{'<<'}</button>}\n    {renderPaginationBtn(onClick, page, total)}\n    {page < total - 2\n    && <button type=\"button\" onClick={onClick} data-name=\"next\">{'>>'}</button>}\n  </div>\n);\n\nPagination.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { Pagination } from './components/Pagination/Pagination';\nimport './App.css';\n\nclass App extends PureComponent {\n  state = {\n    page: 1,\n    total: 42,\n  }\n\n  handleChange = ({ target }) => {\n    const btnType = target.getAttribute('data-name');\n    const { page } = this.state;\n\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(btnType)) {\n      this.updatePage(Number(btnType));\n    } else {\n      switch (btnType) {\n        case 'next':\n          this.updatePage(page + 1);\n          break;\n        case 'prev':\n          this.updatePage(page - 1);\n          break;\n        default: break;\n      }\n    }\n  }\n\n  updatePage = (number) => {\n    this.setState({\n      page: number,\n    });\n  }\n\n  render() {\n    const { page, total } = this.state;\n\n    return (\n      <Pagination\n        total={total}\n        page={page}\n        onClick={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}